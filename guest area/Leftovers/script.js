// ======================
// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–∞
// ======================
function switchLanguage(lang) {
    document.documentElement.lang = lang;
    // <-- –∏–∑–º–µ–Ω–µ–Ω–æ: –µ–¥–∏–Ω—ã–π –∫–ª—é—á 'lang'
    localStorage.setItem('lang', lang);

    // –ü–µ—Ä–µ–≤–æ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Ä–∞–∑–¥–µ–ª–æ–≤
    document.querySelectorAll('.section-title').forEach(title => {
        if (title.dataset[lang]) title.textContent = title.dataset[lang];
    });

    // –ü–µ—Ä–µ–≤–æ–¥ –ª–µ–π–±–ª–æ–≤
    document.querySelectorAll('.check-label, label[data-i18n]').forEach(label => {
        if (label.dataset[lang]) label.textContent = label.dataset[lang];
    });

    // –ü–µ—Ä–µ–≤–æ–¥ –∫–Ω–æ–ø–æ–∫ –∏ –æ–ø—Ü–∏–π select
    document.querySelectorAll('select').forEach(select => {
        Array.from(select.options).forEach(option => {
            if (option.value === '') option.textContent = '‚Äî';
            else if (option.dataset[lang]) option.textContent = option.dataset[lang];
        });

        // –ü–µ—Ä–µ–≤–æ–¥ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –æ–ø—Ü–∏–∏
        const selected = select.options[select.selectedIndex];
        if (selected && selected.dataset[lang]) selected.textContent = selected.dataset[lang];
    });

    // –ü–µ—Ä–µ–≤–æ–¥ –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
    const sendBtn = document.getElementById('sendToTelegram');
    if (sendBtn && sendBtn.dataset[lang]) sendBtn.textContent = sendBtn.dataset[lang];
}

// ======================
// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
// ======================
function saveFormData() {
    const data = {};

    document.querySelectorAll('select').forEach(select => {
        data[select.name || select.id] = select.value;
    });

    document.querySelectorAll('textarea.comment').forEach(textarea => {
        data[textarea.name || textarea.id] = textarea.value;
    });

    localStorage.setItem('formData', JSON.stringify(data));
}

// ======================
// –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
// ======================
function restoreFormData() {
    const saved = localStorage.getItem('formData');
    if (!saved) return;

    const data = JSON.parse(saved);

    document.querySelectorAll('select').forEach(select => {
        if (data[select.name || select.id] !== undefined) select.value = data[select.name || select.id];
    });

    document.querySelectorAll('textarea.comment').forEach(textarea => {
        if (data[textarea.name || textarea.id] !== undefined) textarea.value = data[textarea.name || textarea.id];
    });
}

// ======================
// DOMContentLoaded
// ======================
document.addEventListener('DOMContentLoaded', () => {
    // <-- –∏–∑–º–µ–Ω–µ–Ω–æ: —á–∏—Ç–∞–µ–º –µ–¥–∏–Ω—ã–π –∫–ª—é—á 'lang'
    const lang = localStorage.getItem('lang') || 'ru';

    // –°—Ä–∞–∑—É –ø—Ä–∏–º–µ–Ω—è–µ–º —è–∑—ã–∫ –∫–æ –≤—Å–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    switchLanguage(lang);

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—É—Å—Ç–æ–π –æ–ø—Ü–∏–∏ –≤ select, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    document.querySelectorAll('select.qty').forEach(select => {
        const hasEmpty = Array.from(select.options).some(opt => opt.value === '');
        if (!hasEmpty) {
            const emptyOption = document.createElement('option');
            emptyOption.value = '';
            emptyOption.dataset.ru = '‚Äî';
            emptyOption.dataset.en = '‚Äî';
            emptyOption.dataset.vi = '‚Äî';
            emptyOption.textContent = '‚Äî';
            emptyOption.selected = true;
            select.insertBefore(emptyOption, select.firstChild);
        }
    });

    // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
    restoreFormData();

    // –ü–µ—Ä–µ–≤–æ–¥ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –æ–ø—Ü–∏–π –ø–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–æ—Ä–º—ã
    document.querySelectorAll('select').forEach(select => {
        const selectedOption = select.options[select.selectedIndex];
        if (selectedOption && selectedOption.dataset[lang]) selectedOption.textContent = selectedOption.dataset[lang];
    });

    // –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
    document.querySelectorAll('select, textarea.comment').forEach(el => {
        el.addEventListener('input', saveFormData);
    });

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
    const dateDiv = document.getElementById('autodate');
    if (dateDiv) {
        const today = new Date();
        const locales = { ru: 'ru-RU', en: 'en-US', vi: 'vi-VN' };
        const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
        dateDiv.textContent = today.toLocaleDateString(locales[lang] || 'ru-RU', options);
    }

// –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏
const button = document.getElementById('sendToTelegram');
if (button) {
    button.addEventListener('click', async () => {
        const chat_id = '-1002915693964';
        const worker_url = 'https://shbb1.stassser.workers.dev/';
        const accessKey = "14d92358-9b7a-4e16-b2a7-35e9ed71de43";
        const lang = document.documentElement.lang || 'ru'; // –±–µ—Ä–µ–º —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫

        const buildMessage = () => {
            let message = `üßæ <b>${lang === 'en' ? 'LEFTOVER/GIVEN' : '–û–°–¢–ê–¢–ö–ò/–í–´–°–¢–ê–õ–ï–ù–û'}</b>\n\n`;

            const today = new Date();
            const day = String(today.getDate()).padStart(2, '0');
            const month = String(today.getMonth() + 1).padStart(2, '0');
            message += `üìÖ ${lang === 'en' ? 'Date' : '–î–∞—Ç–∞'}: ${day}/${month}\n`;

            const nameSelect = document.querySelector('select[name="chef"]');
            const selectedChef = nameSelect?.options[nameSelect.selectedIndex];
            const name = selectedChef?.dataset[lang] || selectedChef?.textContent || '‚Äî';
            message += `${lang === 'en' ? 'üë®‚Äçüç≥ Name' : 'üë®‚Äçüç≥ –ò–º—è'}: ${name}\n`;

            const actionSelect = document.querySelector('select[name="actionType"]');
            if (actionSelect && actionSelect.value) {
                const selectedAction = actionSelect.options[actionSelect.selectedIndex];
                const actionText = selectedAction?.dataset[lang] || selectedAction.textContent;
                message += `${lang === 'en' ? 'üìå Action' : 'üìå –î–µ–π—Å—Ç–≤–∏–µ'}: ${actionText}\n`;
            }

            message += '\n';

            document.querySelectorAll('.menu-section').forEach(section => {
                const sectionTitle = section.querySelector('.section-title');
                const title = sectionTitle?.dataset[lang] || sectionTitle?.textContent || '';
                let sectionContent = '';

                section.querySelectorAll('.dish').forEach(dish => {
                    const select = dish.querySelector('select.qty');
                    if (!select || !select.value) return;

                    const label = dish.querySelector('label.check-label');
                    const labelText = label?.dataset[lang] || label?.textContent || '‚Äî';
                    const selectedOption = select.options[select.selectedIndex];
                    const value = selectedOption?.dataset[lang] || selectedOption.textContent || '‚Äî';
                    sectionContent += `‚Ä¢ ${labelText}: ${value}\n`;
                });

                const commentField = section.querySelector('textarea.comment');
                if (commentField && commentField.value.trim()) {
                    sectionContent += `üí¨ ${lang === 'en' ? 'Comment' : '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π'}: ${commentField.value.trim()}\n`;
                }

                if (sectionContent.trim()) {
                    message += `üî∏ <b>${title}</b>\n` + sectionContent + '\n';
                }
            });

            return message;
        };

        const msg = buildMessage();

        try {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º 1 —Ä–∞–∑
            await fetch(worker_url, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ chat_id, text: msg })
            });

            await fetch("https://api.web3forms.com/submit", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                    access_key: accessKey,
                    subject: lang === 'en' ? "LEFTOVER/GIVEN" : "–û–°–¢–ê–¢–ö–ò/–í–´–°–¢–ê–õ–ï–ù–û",
                    from_name: "SHBB PASTRY",
                    reply_to: "no-reply@shbb.com",
                    message: msg
                })
            });

            alert('‚úÖ –û–¢–ü–†–ê–í–õ–ï–ù–û');

            // –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã –∏ localStorage
            localStorage.removeItem('formData');
            document.querySelectorAll('select').forEach(select => select.value = '');
            document.querySelectorAll('textarea.comment').forEach(textarea => textarea.value = '');

        } catch (err) {
            alert('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: ' + err.message);
            console.error(err);
        }
    });
}
