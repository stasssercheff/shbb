// === sendConfig.js ===
// –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —è–∑—ã–∫–∞–º–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª–∏ –∏–∑ localStorage –∏–ª–∏ —Å–æ–∑–¥–∞—ë–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ
let sendProfiles;
try {
  sendProfiles = JSON.parse(localStorage.getItem("sendProfiles")) || {
    rest: ["ru"],     
    hall: ["vi"],
    kitchen: ["ru", "en"],
    pastry: ["ru"],
    extra1: ["ru"],
    extra2: ["ru"],
    extra3: ["ru"]
  };
  console.log("üì¶ sendProfiles –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ localStorage:", sendProfiles);
} catch (e) {
  console.warn("‚ö† –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è sendProfiles, —Å–æ–∑–¥–∞—é –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ");
  sendProfiles = {
    rest: ["ru"],
    hall: ["vi"],
    kitchen: ["ru", "en"],
    pastry: ["ru"],
    extra1: ["ru"],
    extra2: ["ru"],
    extra3: ["ru"]
  };
  localStorage.removeItem("sendProfiles");
}

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ—Ñ–∏–ª–∏ –≤ localStorage
function saveProfiles() {
  localStorage.setItem("sendProfiles", JSON.stringify(sendProfiles));
  console.log("üíæ sendProfiles —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:", sendProfiles);
}

// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function getCurrentProfile() {
  const profile = document.body.dataset.profile || "rest";
  console.log("üìÑ –¢–µ–∫—É—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã:", profile);
  return profile;
}

// –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫–∏ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è
function getSendLanguages(profile) {
  const langs = sendProfiles[profile] || ["ru"];
  console.log(`üîç getSendLanguages('${profile}') ‚Üí`, langs);
  return langs;
}

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∞—Å—Å–∏–≤ —è–∑—ã–∫–æ–≤ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ
const currentProfile = getCurrentProfile();
window.sendLangs = getSendLanguages(currentProfile);

// –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä –¥–ª—è hall
if (currentProfile === "hall" && window.sendLangs.includes("ru")) {
  console.log("‚ö† –°—Ç–∞—Ä—ã–π —è–∑—ã–∫ 'ru' –¥–ª—è hall –∏—Å–ø—Ä–∞–≤–ª—è—é –Ω–∞ 'en'");
  sendProfiles[currentProfile] = ["en"];
  saveProfiles();
  window.sendLangs = sendProfiles[currentProfile];
}

console.log("üåç window.sendLangs:", window.sendLangs);

// –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (setSendLanguages, toggleLanguage –∏ —Ç.–¥.)
function setSendLanguages(profile, langs) {
  if (!Array.isArray(langs)) throw new Error("langs –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–∞—Å—Å–∏–≤–æ–º");
  sendProfiles[profile] = langs.map(String);
  console.log(`‚úÖ –î–ª—è –ø—Ä–æ—Ñ–∏–ª—è '${profile}' —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —è–∑—ã–∫–∏:`, sendProfiles[profile]);
  saveProfiles();
}

function toggleLanguage(profile, lang) {
  const langs = sendProfiles[profile] || [];
  if (langs.includes(lang)) {
    sendProfiles[profile] = langs.filter(l => l !== lang);
    console.log(`‚ùå –Ø–∑—ã–∫ '${lang}' —É–±—Ä–∞–Ω –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è '${profile}'`);
  } else {
    sendProfiles[profile] = [...langs, lang];
    console.log(`‚ûï –Ø–∑—ã–∫ '${lang}' –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ø—Ä–æ—Ñ–∏–ª—å '${profile}'`);
  }
  saveProfiles();
}

function isLanguageSelected(profile, lang) {
  return (sendProfiles[profile] || []).includes(lang);
}
