// === sendConfig.js ===
// –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —è–∑—ã–∫–∞–º–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π

let sendProfiles;
try {
  sendProfiles = JSON.parse(localStorage.getItem("sendProfiles")) || {
    rest: ["ru"],
    hall: ["en"],
    kitchen: ["ru", "en"],
    pastry: ["ru"],
    extra1: ["ru"],
    extra2: ["ru"],
    extra3: ["ru"]
  };
  console.log("üì¶ [sendConfig.js] –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏ –∏–∑ localStorage:", sendProfiles);
} catch (e) {
  console.warn("‚ö† –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è sendProfiles, —Å–±—Ä–∞—Å—ã–≤–∞—é –Ω–∞ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ");
  sendProfiles = {
    rest: ["ru"],
    hall: ["en"],
    kitchen: ["ru", "en"],
    pastry: ["ru"],
    extra1: ["ru"],
    extra2: ["ru"],
    extra3: ["ru"]
  };
  localStorage.removeItem("sendProfiles");
}

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ—Ñ–∏–ª–∏ –≤ localStorage
function saveProfiles() {
  localStorage.setItem("sendProfiles", JSON.stringify(sendProfiles));
  console.log("üíæ [sendConfig.js] –°–æ—Ö—Ä–∞–Ω–∏–ª sendProfiles:", sendProfiles);
}

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —è–∑—ã–∫–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
function setSendLanguages(profile, langs) {
  if (!Array.isArray(langs)) throw new Error("langs –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–∞—Å—Å–∏–≤–æ–º");
  sendProfiles[profile] = langs.map(String);
  console.log(`‚úÖ –î–ª—è –ø—Ä–æ—Ñ–∏–ª—è '${profile}' —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —è–∑—ã–∫–∏:`, sendProfiles[profile]);
  saveProfiles();
}

// –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
function getSendLanguages(profile) {
  const langs = sendProfiles[profile] || ["ru"];
  console.log(`üîç getSendLanguages('${profile}') ‚Üí`, langs);
  return langs;
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–Ω –ª–∏ —è–∑—ã–∫
function isLanguageSelected(profile, lang) {
  return (sendProfiles[profile] || []).includes(lang);
}

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–ø–æ –∞—Ç—Ä–∏–±—É—Ç—É <body data-profile="...">)
function getCurrentProfile() {
  const profile = document.body.dataset.profile || "rest";
  console.log("üìÑ –¢–µ–∫—É—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã:", profile);
  return profile;
}

// –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–∞
function toggleLanguage(profile, lang) {
  const langs = sendProfiles[profile] || [];
  if (langs.includes(lang)) {
    sendProfiles[profile] = langs.filter(l => l !== lang);
    console.log(`‚ùå –Ø–∑—ã–∫ '${lang}' —É–±—Ä–∞–Ω –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è '${profile}'`);
  } else {
    sendProfiles[profile] = [...langs, lang];
    console.log(`‚ûï –Ø–∑—ã–∫ '${lang}' –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ø—Ä–æ—Ñ–∏–ª—å '${profile}'`);
  }
  saveProfiles();
}

// ‚úÖ –ì–ª–æ–±–∞–ª—å–Ω–æ –º–∞—Å—Å–∏–≤ —è–∑—ã–∫–æ–≤ –æ—Ç–ø—Ä–∞–≤–∫–∏
window.sendLangs = getSendLanguages(getCurrentProfile());
console.log("üåç –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —è–∑—ã–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏:", window.sendLangs);
